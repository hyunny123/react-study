{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useReducer, useState } from \"react\";\nconst initialInputState = {\n  value: \"\",\n  isTouched: false\n}; //이전 상태에 대한 state, 자동으로 전달되는 action\n\nconst inputStateReducer = (state, action) => {\n  return {\n    value: \"\",\n    isTouched: false\n  };\n};\n\nconst useInput = validateValue => {\n  _s();\n\n  const [inputState, dispatch] = useReducer(inputStateReducer, initialInputState); //이 매개변수가 함수를 값으로  받게 된다.\n\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = !valueIsValid && isTouched;\n\n  const valueChangeHandler = e => {\n    setEnteredValue(e.target.value);\n  };\n\n  const inputBlurHandler = e => {\n    setIsTouched(true);\n  };\n\n  const reset = () => {\n    setEnteredValue(\"\");\n    setIsTouched(false);\n  };\n\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError: hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset\n  };\n};\n\n_s(useInput, \"gvJkPEQ6Ju5turm8Oo71bK8W7Zk=\");\n\nexport default useInput;","map":{"version":3,"names":["React","useReducer","useState","initialInputState","value","isTouched","inputStateReducer","state","action","useInput","validateValue","inputState","dispatch","valueIsValid","enteredValue","hasError","valueChangeHandler","e","setEnteredValue","target","inputBlurHandler","setIsTouched","reset","isValid"],"sources":["/Users/hyunjung/Desktop/udemy/react/test/Ustudy/10-practice/src/hooks/use-input.js"],"sourcesContent":["import React, { useReducer, useState } from \"react\";\n\nconst initialInputState = {\n  value: \"\",\n  isTouched: false,\n};\n\n//이전 상태에 대한 state, 자동으로 전달되는 action\nconst inputStateReducer = (state, action) => {\n  return {\n    value: \"\",\n    isTouched: false,\n  };\n};\n\nconst useInput = (validateValue) => {\n  const [inputState, dispatch] = useReducer(\n    inputStateReducer,\n    initialInputState\n  );\n\n  //이 매개변수가 함수를 값으로  받게 된다.\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = !valueIsValid && isTouched;\n\n  const valueChangeHandler = (e) => {\n    setEnteredValue(e.target.value);\n  };\n\n  const inputBlurHandler = (e) => {\n    setIsTouched(true);\n  };\n\n  const reset = () => {\n    setEnteredValue(\"\");\n    setIsTouched(false);\n  };\n\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError: hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset,\n  };\n};\n\nexport default useInput;\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AAEA,MAAMC,iBAAiB,GAAG;EACxBC,KAAK,EAAE,EADiB;EAExBC,SAAS,EAAE;AAFa,CAA1B,C,CAKA;;AACA,MAAMC,iBAAiB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EAC3C,OAAO;IACLJ,KAAK,EAAE,EADF;IAELC,SAAS,EAAE;EAFN,CAAP;AAID,CALD;;AAOA,MAAMI,QAAQ,GAAIC,aAAD,IAAmB;EAAA;;EAClC,MAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBX,UAAU,CACvCK,iBADuC,EAEvCH,iBAFuC,CAAzC,CADkC,CAMlC;;EACA,MAAMU,YAAY,GAAGH,aAAa,CAACI,YAAD,CAAlC;EACA,MAAMC,QAAQ,GAAG,CAACF,YAAD,IAAiBR,SAAlC;;EAEA,MAAMW,kBAAkB,GAAIC,CAAD,IAAO;IAChCC,eAAe,CAACD,CAAC,CAACE,MAAF,CAASf,KAAV,CAAf;EACD,CAFD;;EAIA,MAAMgB,gBAAgB,GAAIH,CAAD,IAAO;IAC9BI,YAAY,CAAC,IAAD,CAAZ;EACD,CAFD;;EAIA,MAAMC,KAAK,GAAG,MAAM;IAClBJ,eAAe,CAAC,EAAD,CAAf;IACAG,YAAY,CAAC,KAAD,CAAZ;EACD,CAHD;;EAKA,OAAO;IACLjB,KAAK,EAAEU,YADF;IAELS,OAAO,EAAEV,YAFJ;IAGLE,QAAQ,EAAEA,QAHL;IAILC,kBAJK;IAKLI,gBALK;IAMLE;EANK,CAAP;AAQD,CA/BD;;GAAMb,Q;;AAiCN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}