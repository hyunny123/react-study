{"ast":null,"code":"var _jsxFileName = \"/Users/hyunjung/Desktop/udemy/react/test/Ustudy/10-practice/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  useEffect(() => {\n    if (enteredNameIsValid) {\n      console.log(\"입력창이 유효하다.\");\n    }\n  }, [enteredNameIsValid]);\n\n  const nameInputChangeHandler = e => {\n    setEnteredName(e.target.value);\n\n    if (e.target.value.trim() !== \"\") {\n      setEnteredNameIsValid(true);\n    }\n  }; //입력창에 커서를 둔뒤 입력하지 않고 커서를 옮길 경우, 경고문구\n\n\n  const nameInputBlurHandler = e => {\n    setEnteredNameTouched(true);\n\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n    }\n  };\n\n  const formSubmissionHandler = e => {\n    e.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n      return;\n    }\n\n    setEnteredNameIsValid(true);\n    console.log(enteredName);\n    setEnteredName(\"\");\n  };\n\n  const nameInputIsInValid = !enteredNameIsValid && enteredNameTouched;\n  const nameInputClasses = nameInputIsInValid ? \"form-control invalid\" : \"form-control \";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"\\uC774\\uB984\\uC744 \\uC791\\uC131\\uD574\\uC8FC\\uC138\\uC694!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onBlur: nameInputBlurHandler,\n        onChange: nameInputChangeHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), nameInputIsInValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"\\uC785\\uB825\\uCE78\\uC5D0 \\uC774\\uB984\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"HCFLr03nRUx+tY6OVWFJ4UpsPm8=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useEffect","useState","SimpleInput","props","enteredName","setEnteredName","enteredNameIsValid","setEnteredNameIsValid","enteredNameTouched","setEnteredNameTouched","console","log","nameInputChangeHandler","e","target","value","trim","nameInputBlurHandler","formSubmissionHandler","preventDefault","nameInputIsInValid","nameInputClasses"],"sources":["/Users/hyunjung/Desktop/udemy/react/test/Ustudy/10-practice/src/components/SimpleInput.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useState } from \"react\";\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n\n  useEffect(() => {\n    if (enteredNameIsValid) {\n      console.log(\"입력창이 유효하다.\");\n    }\n  }, [enteredNameIsValid]);\n\n  const nameInputChangeHandler = (e) => {\n    setEnteredName(e.target.value);\n    if (e.target.value.trim() !== \"\") {\n      setEnteredNameIsValid(true);\n    }\n  };\n  //입력창에 커서를 둔뒤 입력하지 않고 커서를 옮길 경우, 경고문구\n  const nameInputBlurHandler = (e) => {\n    setEnteredNameTouched(true);\n\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n    }\n  };\n\n  const formSubmissionHandler = (e) => {\n    e.preventDefault();\n\n    setEnteredNameTouched(true);\n\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n      return;\n    }\n\n    setEnteredNameIsValid(true);\n    console.log(enteredName);\n\n    setEnteredName(\"\");\n  };\n\n  const nameInputIsInValid = !enteredNameIsValid && enteredNameTouched;\n\n  const nameInputClasses = nameInputIsInValid\n    ? \"form-control invalid\"\n    : \"form-control \";\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">이름을 작성해주세요!</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onBlur={nameInputBlurHandler}\n          onChange={nameInputChangeHandler}\n          value={enteredName}\n        />\n        {nameInputIsInValid && (\n          <p className=\"error-text\">입력칸에 이름을 입력해주세요!</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC7B,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACK,kBAAD,EAAqBC,qBAArB,IAA8CN,QAAQ,CAAC,KAAD,CAA5D;EACA,MAAM,CAACO,kBAAD,EAAqBC,qBAArB,IAA8CR,QAAQ,CAAC,KAAD,CAA5D;EAEAD,SAAS,CAAC,MAAM;IACd,IAAIM,kBAAJ,EAAwB;MACtBI,OAAO,CAACC,GAAR,CAAY,YAAZ;IACD;EACF,CAJQ,EAIN,CAACL,kBAAD,CAJM,CAAT;;EAMA,MAAMM,sBAAsB,GAAIC,CAAD,IAAO;IACpCR,cAAc,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;;IACA,IAAIF,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,IAAf,OAA0B,EAA9B,EAAkC;MAChCT,qBAAqB,CAAC,IAAD,CAArB;IACD;EACF,CALD,CAX6B,CAiB7B;;;EACA,MAAMU,oBAAoB,GAAIJ,CAAD,IAAO;IAClCJ,qBAAqB,CAAC,IAAD,CAArB;;IAEA,IAAIL,WAAW,CAACY,IAAZ,OAAuB,EAA3B,EAA+B;MAC7BT,qBAAqB,CAAC,KAAD,CAArB;IACD;EACF,CAND;;EAQA,MAAMW,qBAAqB,GAAIL,CAAD,IAAO;IACnCA,CAAC,CAACM,cAAF;IAEAV,qBAAqB,CAAC,IAAD,CAArB;;IAEA,IAAIL,WAAW,CAACY,IAAZ,OAAuB,EAA3B,EAA+B;MAC7BT,qBAAqB,CAAC,KAAD,CAArB;MACA;IACD;;IAEDA,qBAAqB,CAAC,IAAD,CAArB;IACAG,OAAO,CAACC,GAAR,CAAYP,WAAZ;IAEAC,cAAc,CAAC,EAAD,CAAd;EACD,CAdD;;EAgBA,MAAMe,kBAAkB,GAAG,CAACd,kBAAD,IAAuBE,kBAAlD;EAEA,MAAMa,gBAAgB,GAAGD,kBAAkB,GACvC,sBADuC,GAEvC,eAFJ;EAIA,oBACE;IAAM,QAAQ,EAAEF,qBAAhB;IAAA,wBACE;MAAK,SAAS,EAAEG,gBAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,IAAI,EAAC,MADP;QAEE,EAAE,EAAC,MAFL;QAGE,MAAM,EAAEJ,oBAHV;QAIE,QAAQ,EAAEL,sBAJZ;QAKE,KAAK,EAAER;MALT;QAAA;QAAA;QAAA;MAAA,QAFF,EASGgB,kBAAkB,iBACjB;QAAG,SAAS,EAAC,YAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAVJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAcE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAdF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD,CApED;;GAAMlB,W;;KAAAA,W;AAsEN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}