{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useReducer, useState } from \"react\";\nconst initialInputState = {\n  value: \"\",\n  isTouched: false\n}; //이전 상태에 대한 state, 자동으로 전달되는 action\n\nconst inputStateReducer = (state, action) => {\n  return {\n    value: \"\",\n    isTouched: false\n  };\n};\n\nconst useInput = validateValue => {\n  _s();\n\n  useReducer(inputStateReducer, {});\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isTouched, setIsTouched] = useState(false); //이 매개변수가 함수를 값으로  받게 된다.\n\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = !valueIsValid && isTouched;\n\n  const valueChangeHandler = e => {\n    setEnteredValue(e.target.value);\n  };\n\n  const inputBlurHandler = e => {\n    setIsTouched(true);\n  };\n\n  const reset = () => {\n    setEnteredValue(\"\");\n    setIsTouched(false);\n  };\n\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError: hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset\n  };\n};\n\n_s(useInput, \"2x+j/JNDqrJ0mXkFsWdf+OaGo7M=\");\n\nexport default useInput;","map":{"version":3,"names":["React","useReducer","useState","initialInputState","value","isTouched","inputStateReducer","state","action","useInput","validateValue","enteredValue","setEnteredValue","setIsTouched","valueIsValid","hasError","valueChangeHandler","e","target","inputBlurHandler","reset","isValid"],"sources":["/Users/hyunjung/Desktop/udemy/react/test/Ustudy/10-practice/src/hooks/use-input.js"],"sourcesContent":["import React, { useReducer, useState } from \"react\";\n\nconst initialInputState = {\n  value: \"\",\n  isTouched: false,\n};\n\n//이전 상태에 대한 state, 자동으로 전달되는 action\nconst inputStateReducer = (state, action) => {\n  return {\n    value: \"\",\n    isTouched: false,\n  };\n};\n\nconst useInput = (validateValue) => {\n  useReducer(inputStateReducer, {});\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isTouched, setIsTouched] = useState(false);\n\n  //이 매개변수가 함수를 값으로  받게 된다.\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = !valueIsValid && isTouched;\n\n  const valueChangeHandler = (e) => {\n    setEnteredValue(e.target.value);\n  };\n\n  const inputBlurHandler = (e) => {\n    setIsTouched(true);\n  };\n\n  const reset = () => {\n    setEnteredValue(\"\");\n    setIsTouched(false);\n  };\n\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError: hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset,\n  };\n};\n\nexport default useInput;\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AAEA,MAAMC,iBAAiB,GAAG;EACxBC,KAAK,EAAE,EADiB;EAExBC,SAAS,EAAE;AAFa,CAA1B,C,CAKA;;AACA,MAAMC,iBAAiB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EAC3C,OAAO;IACLJ,KAAK,EAAE,EADF;IAELC,SAAS,EAAE;EAFN,CAAP;AAID,CALD;;AAOA,MAAMI,QAAQ,GAAIC,aAAD,IAAmB;EAAA;;EAClCT,UAAU,CAACK,iBAAD,EAAoB,EAApB,CAAV;EACA,MAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAACG,SAAD,EAAYQ,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C,CAHkC,CAKlC;;EACA,MAAMY,YAAY,GAAGJ,aAAa,CAACC,YAAD,CAAlC;EACA,MAAMI,QAAQ,GAAG,CAACD,YAAD,IAAiBT,SAAlC;;EAEA,MAAMW,kBAAkB,GAAIC,CAAD,IAAO;IAChCL,eAAe,CAACK,CAAC,CAACC,MAAF,CAASd,KAAV,CAAf;EACD,CAFD;;EAIA,MAAMe,gBAAgB,GAAIF,CAAD,IAAO;IAC9BJ,YAAY,CAAC,IAAD,CAAZ;EACD,CAFD;;EAIA,MAAMO,KAAK,GAAG,MAAM;IAClBR,eAAe,CAAC,EAAD,CAAf;IACAC,YAAY,CAAC,KAAD,CAAZ;EACD,CAHD;;EAKA,OAAO;IACLT,KAAK,EAAEO,YADF;IAELU,OAAO,EAAEP,YAFJ;IAGLC,QAAQ,EAAEA,QAHL;IAILC,kBAJK;IAKLG,gBALK;IAMLC;EANK,CAAP;AAQD,CA9BD;;GAAMX,Q;;AAgCN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}