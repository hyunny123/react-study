{"ast":null,"code":"var _jsxFileName = \"/Users/hyunjung/Desktop/udemy/react/test/Ustudy/10-practice/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const {\n    value: enterecName,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangedHandler,\n    inputBlurHandler: nameBlurHandler\n  } = useInput();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false); //const [formIsValid, setFormIsValid] = useState(false);\n\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== \"\";\n  const nameInputIsInValid = !enteredNameIsValid && enteredNameTouched;\n  const enteredEmailIsValid = enteredEmail.includes(\"@\");\n  const emailInputIsInValid = !enteredEmailIsValid && enteredEmailTouched; //   useEffect(() => {\n  //     if (enteredNameIsValid) {\n  //       setFormIsValid(true);\n  //     } else {\n  //       setFormIsValid(false);\n  //     }\n  //   }, [enteredNameIsValid]);\n\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const nameInputChangeHandler = e => {\n    setEnteredName(e.target.value);\n  };\n\n  const emailInputChangeHandler = e => {\n    setEnteredEmail(e.target.value);\n  }; //입력창에 커서를 둔뒤 입력하지 않고 커서를 옮길 경우, 경고문구\n\n\n  const nameInputBlurHandler = e => {\n    setEnteredNameTouched(true);\n  };\n\n  const emailInputBlurHandler = e => {\n    setEnteredEmailTouched(true);\n  };\n\n  const formSubmissionHandler = e => {\n    e.preventDefault();\n    setEnteredNameTouched(true);\n    setEnteredEmailTouched(true); //유효하지 않으니 반환\n\n    if (!enteredNameIsValid && !enteredEmailIsValid) {\n      return;\n    }\n\n    console.log(enteredName);\n    console.log(enteredEmail);\n    setEnteredName(\"\");\n    setEnteredNameTouched(false);\n    setEnteredEmail(\"\");\n    setEnteredEmailTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsInValid ? \"form-control invalid\" : \"form-control \";\n  const emailInputClasses = emailInputIsInValid ? \"form-control invalid\" : \"form-control \";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"\\uC774\\uB984\\uC744 \\uC791\\uC131\\uD574\\uC8FC\\uC138\\uC694!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onBlur: nameInputBlurHandler,\n        onChange: nameInputChangeHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), nameInputIsInValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"\\uC785\\uB825\\uCE78\\uC5D0 \\uC774\\uB984\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"email\\uC744 \\uC791\\uC131\\uD574\\uC8FC\\uC138\\uC694!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onBlur: emailInputBlurHandler,\n        onChange: emailInputChangeHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), emailInputIsInValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"\\uC785\\uB825\\uCE78\\uC5D0 email\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"W+CwqfNMdaI/9I03vNSmk6Ij/9g=\", false, function () {\n  return [useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useEffect","useState","useInput","SimpleInput","props","value","enterecName","hasError","nameInputHasError","valueChangeHandler","nameChangedHandler","inputBlurHandler","nameBlurHandler","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","enteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredEmailTouched","enteredNameIsValid","trim","nameInputIsInValid","enteredEmailIsValid","includes","emailInputIsInValid","formIsValid","nameInputChangeHandler","e","target","emailInputChangeHandler","nameInputBlurHandler","emailInputBlurHandler","formSubmissionHandler","preventDefault","console","log","nameInputClasses","emailInputClasses"],"sources":["/Users/hyunjung/Desktop/udemy/react/test/Ustudy/10-practice/src/components/SimpleInput.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n  const {\n    value: enterecName,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangedHandler,\n    inputBlurHandler: nameBlurHandler,\n  } = useInput();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  //const [formIsValid, setFormIsValid] = useState(false);\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n\n  const enteredNameIsValid = enteredName.trim() !== \"\";\n  const nameInputIsInValid = !enteredNameIsValid && enteredNameTouched;\n  const enteredEmailIsValid = enteredEmail.includes(\"@\");\n  const emailInputIsInValid = !enteredEmailIsValid && enteredEmailTouched;\n\n  //   useEffect(() => {\n  //     if (enteredNameIsValid) {\n  //       setFormIsValid(true);\n  //     } else {\n  //       setFormIsValid(false);\n  //     }\n  //   }, [enteredNameIsValid]);\n\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const nameInputChangeHandler = (e) => {\n    setEnteredName(e.target.value);\n  };\n\n  const emailInputChangeHandler = (e) => {\n    setEnteredEmail(e.target.value);\n  };\n  //입력창에 커서를 둔뒤 입력하지 않고 커서를 옮길 경우, 경고문구\n  const nameInputBlurHandler = (e) => {\n    setEnteredNameTouched(true);\n  };\n  const emailInputBlurHandler = (e) => {\n    setEnteredEmailTouched(true);\n  };\n\n  const formSubmissionHandler = (e) => {\n    e.preventDefault();\n\n    setEnteredNameTouched(true);\n    setEnteredEmailTouched(true);\n    //유효하지 않으니 반환\n    if (!enteredNameIsValid && !enteredEmailIsValid) {\n      return;\n    }\n\n    console.log(enteredName);\n    console.log(enteredEmail);\n\n    setEnteredName(\"\");\n    setEnteredNameTouched(false);\n    setEnteredEmail(\"\");\n    setEnteredEmailTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsInValid\n    ? \"form-control invalid\"\n    : \"form-control \";\n  const emailInputClasses = emailInputIsInValid\n    ? \"form-control invalid\"\n    : \"form-control \";\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">이름을 작성해주세요!</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onBlur={nameInputBlurHandler}\n          onChange={nameInputChangeHandler}\n          value={enteredName}\n        />\n        {nameInputIsInValid && (\n          <p className=\"error-text\">입력칸에 이름을 입력해주세요!</p>\n        )}\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor=\"email\">email을 작성해주세요!</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          onBlur={emailInputBlurHandler}\n          onChange={emailInputChangeHandler}\n          value={enteredEmail}\n        />\n        {emailInputIsInValid && (\n          <p className=\"error-text\">입력칸에 email을 입력해주세요!</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}