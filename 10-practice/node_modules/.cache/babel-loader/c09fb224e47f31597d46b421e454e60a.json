{"ast":null,"code":"var _jsxFileName = \"/Users/hyunjung/Desktop/udemy/react/test/Ustudy/10-practice/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState(\"\");\n\n  const nameInputChangeHandler = e => {\n    //input 요소로 입력된 값에 event.target으로 접근하는것.\n    setEnteredName(e.target.value);\n  }; //ref보다 상태를 사용하는 것이 좋은 이유는?\n  //입력값을 초기화 하고 싶은 경우.\n\n\n  const formSubmissionHandler = e => {\n    //브라우저에서 작동하는 바닐라 자바스크립트를 다루고 있기 때문에.\n    //이폼안에 있는 버튼을 통해 폼제출 웹사이트를 제공하는 서버로 http 요청을 적용.\n    //원하는 서버로 http 요청을 보낸다.\n    //우리에게 서버가 없기때문에 요청이 보내지지 않도록 해야한다.\n    //기본적으로 http 요청을 보내지 않고 아무것도 하지 말라는 명령.\n    e.preventDefault();\n\n    if (enteredName.trim() == \"\") {}\n\n    console.log(enteredName);\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue); //input 창에 value props와 연결되어 업데이트 된뒤, 이부분 반영.\n\n    setEnteredName(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"OtW4WQfH+l9HPCIGRWvyE1+oXJw=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useRef","useState","SimpleInput","props","nameInputRef","enteredName","setEnteredName","nameInputChangeHandler","e","target","value","formSubmissionHandler","preventDefault","trim","console","log","enteredValue","current"],"sources":["/Users/hyunjung/Desktop/udemy/react/test/Ustudy/10-practice/src/components/SimpleInput.js"],"sourcesContent":["import { useRef, useState } from \"react\";\n\nconst SimpleInput = (props) => {\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState(\"\");\n\n  const nameInputChangeHandler = (e) => {\n    //input 요소로 입력된 값에 event.target으로 접근하는것.\n    setEnteredName(e.target.value);\n  };\n\n  //ref보다 상태를 사용하는 것이 좋은 이유는?\n  //입력값을 초기화 하고 싶은 경우.\n  const formSubmissionHandler = (e) => {\n    //브라우저에서 작동하는 바닐라 자바스크립트를 다루고 있기 때문에.\n    //이폼안에 있는 버튼을 통해 폼제출 웹사이트를 제공하는 서버로 http 요청을 적용.\n    //원하는 서버로 http 요청을 보낸다.\n    //우리에게 서버가 없기때문에 요청이 보내지지 않도록 해야한다.\n    //기본적으로 http 요청을 보내지 않고 아무것도 하지 말라는 명령.\n    e.preventDefault();\n\n    if (enteredName.trim() == \"\") {\n    }\n    console.log(enteredName);\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue);\n\n    //input 창에 value props와 연결되어 업데이트 된뒤, 이부분 반영.\n    setEnteredName(\"\");\n  };\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className=\"form-control\">\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          ref={nameInputRef}\n          type=\"text\"\n          id=\"name\"\n          onChange={nameInputChangeHandler}\n          value={enteredName}\n        />\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC7B,MAAMC,YAAY,GAAGJ,MAAM,EAA3B;EACA,MAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;;EAEA,MAAMM,sBAAsB,GAAIC,CAAD,IAAO;IACpC;IACAF,cAAc,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;EACD,CAHD,CAJ6B,CAS7B;EACA;;;EACA,MAAMC,qBAAqB,GAAIH,CAAD,IAAO;IACnC;IACA;IACA;IACA;IACA;IACAA,CAAC,CAACI,cAAF;;IAEA,IAAIP,WAAW,CAACQ,IAAZ,MAAsB,EAA1B,EAA8B,CAC7B;;IACDC,OAAO,CAACC,GAAR,CAAYV,WAAZ;IACA,MAAMW,YAAY,GAAGZ,YAAY,CAACa,OAAb,CAAqBP,KAA1C;IACAI,OAAO,CAACC,GAAR,CAAYC,YAAZ,EAZmC,CAcnC;;IACAV,cAAc,CAAC,EAAD,CAAd;EACD,CAhBD;;EAiBA,oBACE;IAAM,QAAQ,EAAEK,qBAAhB;IAAA,wBACE;MAAK,SAAS,EAAC,cAAf;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,GAAG,EAAEP,YADP;QAEE,IAAI,EAAC,MAFP;QAGE,EAAE,EAAC,MAHL;QAIE,QAAQ,EAAEG,sBAJZ;QAKE,KAAK,EAAEF;MALT;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAWE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAXF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD,CA7CD;;GAAMH,W;;KAAAA,W;AA+CN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}