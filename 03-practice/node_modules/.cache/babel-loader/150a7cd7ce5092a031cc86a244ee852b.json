{"ast":null,"code":"var _jsxFileName = \"/Users/hyunjung/Desktop/udemy/react/test/Ustudy/03-practice/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\"; // import { useEffect } from \"reac t\";\n\nimport AuthContext from \"./store/auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // state가 실행되면 아래의 함수도 실행된다.\n  //그것을 막기위해 필요한 경우 렌더링 되도록 하기 위해서는 useEffect 사용.\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        isLoggedIn: isLoggedIn,\n        onLogout: logoutHandler\n      },\n      children: [/*#__PURE__*/_jsxDEV(MainHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: loginHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 27\n        }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n          onLogout: logoutHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Login","Home","MainHeader","AuthContext","App","isLoggedIn","setIsLoggedIn","loginHandler","email","password","logoutHandler","onLogout"],"sources":["/Users/hyunjung/Desktop/udemy/react/test/Ustudy/03-practice/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\n// import { useEffect } from \"reac t\";\nimport AuthContext from \"./store/auth-context\";\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  // state가 실행되면 아래의 함수도 실행된다.\n  //그것을 막기위해 필요한 경우 렌더링 되도록 하기 위해서는 useEffect 사용.\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n  };\n\n  return (\n    <React.Fragment>\n      <AuthContext.Provider\n        value={{\n          isLoggedIn: isLoggedIn,\n          onLogout: logoutHandler,\n        }}\n      >\n        <MainHeader />\n        <main>\n          {!isLoggedIn && <Login onLogin={loginHandler} />}\n          {isLoggedIn && <Home onLogout={logoutHandler} />}\n        </main>\n      </AuthContext.Provider>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,oCAAvB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,sBAAxB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,KAAD,CAA5C,CADa,CAEb;EACA;;EAEA,MAAMQ,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;IACxC;IACA;IAEAH,aAAa,CAAC,IAAD,CAAb;EACD,CALD;;EAOA,MAAMI,aAAa,GAAG,MAAM;IAC1BJ,aAAa,CAAC,KAAD,CAAb;EACD,CAFD;;EAIA,oBACE,QAAC,KAAD,CAAO,QAAP;IAAA,uBACE,QAAC,WAAD,CAAa,QAAb;MACE,KAAK,EAAE;QACLD,UAAU,EAAEA,UADP;QAELM,QAAQ,EAAED;MAFL,CADT;MAAA,wBAME,QAAC,UAAD;QAAA;QAAA;QAAA;MAAA,QANF,eAOE;QAAA,WACG,CAACL,UAAD,iBAAe,QAAC,KAAD;UAAO,OAAO,EAAEE;QAAhB;UAAA;UAAA;UAAA;QAAA,QADlB,EAEGF,UAAU,iBAAI,QAAC,IAAD;UAAM,QAAQ,EAAEK;QAAhB;UAAA;UAAA;UAAA;QAAA,QAFjB;MAAA;QAAA;QAAA;QAAA;MAAA,QAPF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD;;GAhCQN,G;;KAAAA,G;AAkCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}