[{"/Users/hyunjung/Desktop/udemy/react/test/Ustudy/03-practice/src/index.js":"1","/Users/hyunjung/Desktop/udemy/react/test/Ustudy/03-practice/src/App.js":"2","/Users/hyunjung/Desktop/udemy/react/test/Ustudy/03-practice/src/components/Login/Login.js":"3","/Users/hyunjung/Desktop/udemy/react/test/Ustudy/03-practice/src/components/MainHeader/MainHeader.js":"4","/Users/hyunjung/Desktop/udemy/react/test/Ustudy/03-practice/src/components/Home/Home.js":"5","/Users/hyunjung/Desktop/udemy/react/test/Ustudy/03-practice/src/components/MainHeader/Navigation.js":"6","/Users/hyunjung/Desktop/udemy/react/test/Ustudy/03-practice/src/components/UI/Card/Card.js":"7","/Users/hyunjung/Desktop/udemy/react/test/Ustudy/03-practice/src/components/UI/Button/Button.js":"8"},{"size":169,"mtime":1616593928000,"results":"9","hashOfConfig":"10"},{"size":1282,"mtime":1657688127150,"results":"11","hashOfConfig":"10"},{"size":4272,"mtime":1657889208944,"results":"12","hashOfConfig":"10"},{"size":368,"mtime":1616593928000,"results":"13","hashOfConfig":"10"},{"size":250,"mtime":1616593928000,"results":"14","hashOfConfig":"10"},{"size":571,"mtime":1616593928000,"results":"15","hashOfConfig":"10"},{"size":218,"mtime":1616593928000,"results":"16","hashOfConfig":"10"},{"size":353,"mtime":1616593928000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mvjhy4",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/hyunjung/Desktop/udemy/react/test/Ustudy/03-practice/src/index.js",[],[],"/Users/hyunjung/Desktop/udemy/react/test/Ustudy/03-practice/src/App.js",[],[],[],"/Users/hyunjung/Desktop/udemy/react/test/Ustudy/03-practice/src/components/Login/Login.js",["44"],[],"import React, { useState, useEffect, useReducer } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\n\nconst emailReducer = (state, action) => {\n  //action.type이 USER_INPUT과 같은지 확인\n  //비어있는게 아닌 email의 state스냅샷 반환.\n  if (action.type === \"USER_INPUT\") {\n    return { value: action.val, isValid: action.val.includes(\"@\") };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return { value: state.value, isValid: state.value.includes(\"@\") };\n  }\n  return { value: \"\", isValid: false };\n};\n\nconst passwordReducer = (state, action) => {\n  //action.type이 USER_INPUT과 같은지 확인\n  //비어있는게 아닌 email의 state스냅샷 반환.\n  if (action.type === \"USER_INPUT\") {\n    return { value: action.val, isValid: action.val.trim().length > 6 };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return { value: state.value, isValid: state.value.trim().length > 6 };\n  }\n  return { value: \"\", isValid: false };\n};\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    inValid: false,\n  });\n\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    inValid: null,\n  });\n\n  // useEffect(() => {\n  //   //사용자가 입력을 할때마다 유효성 검사X, 디바운스(그룹화)하여 검사O\n  //   const identifier = setTimeout(() => {\n  //     console.log(\"check!!\");\n  //     setFormIsValid(\n  //       enteredEmail.includes(\"@\") && enteredPassword.trim().length > 6\n  //     );\n  //   }, 500);\n  //   clearTimeout();\n  //   //cleanup func\n  //   return () => {\n  //     console.log(\"cleanup!!\");\n  //     clearTimeout(identifier);\n  //   };\n  // }, [enteredEmail, enteredPassword]);\n\n  const emailChangeHandler = (event) => {\n    // setEnteredEmail(event.target.value);\n    //어떤 식별자가 갖고 있는 필드를 가진 객체\n    dispatchEmail({ type: \"USER_INPUT\", val: event.target.value });\n\n    setFormIsValid(event.target.value.includes(\"@\") && passwordState.isValid);\n  };\n\n  const passwordChangeHandler = (event) => {\n    // setEnteredPassword(event.target.value);\n    dispatchPassword({ type: \"USER_INPUT\" });\n    setFormIsValid(emailState.isValid && event.target.value.trim().length > 6);\n  };\n\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.isValid);\n    dispatchEmail({ type: \"INPUT_BLUR\" });\n  };\n\n  const validatePasswordHandler = () => {\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\n    dispatchPassword({ type: \"INPUT_BLUR\" });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            // passwordIsValid === false ? classes.invalid : \"\"\n            passwordState.isValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n","/Users/hyunjung/Desktop/udemy/react/test/Ustudy/03-practice/src/components/MainHeader/MainHeader.js",[],[],"/Users/hyunjung/Desktop/udemy/react/test/Ustudy/03-practice/src/components/Home/Home.js",[],[],"/Users/hyunjung/Desktop/udemy/react/test/Ustudy/03-practice/src/components/MainHeader/Navigation.js",[],[],"/Users/hyunjung/Desktop/udemy/react/test/Ustudy/03-practice/src/components/UI/Card/Card.js",[],[],"/Users/hyunjung/Desktop/udemy/react/test/Ustudy/03-practice/src/components/UI/Button/Button.js",[],[],{"ruleId":"45","severity":1,"message":"46","line":1,"column":27,"nodeType":"47","messageId":"48","endLine":1,"endColumn":36},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar"]