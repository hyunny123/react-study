{"ast":null,"code":"var _jsxFileName = \"/Users/hyunjung/Desktop/udemy/react/test/Ustudy/02-starting-project/src/components/Users/AddUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport Card from \"../UI/Card\";\nimport Button from \"../UI/Button\";\nimport ErrorModal from \"../UI/ErrorModal\";\nimport Wrapper from \"../Helpers/Wrapper\";\nimport classes from \"./AddUser.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddUser = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const ageInputRef = useRef();\n  const [enteredUserName, setEnteredUserName] = useState(\"\");\n  const [enteredAge, setEnteredAge] = useState(\"\");\n  const [error, setError] = useState(); //유효한 입력값을 갖는 경우에만 코드 실행.\n\n  const addUserHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    console.log(nameInputRef.current.value);\n\n    if (enteredUserName.trim().length === 0 || enteredAge.trim().length === 0) {\n      //오류 상태 설정\n      setError({\n        title: \"Invalid input\",\n        message: \"Please enter a valid name and age (non-empty values).\"\n      });\n      return;\n    }\n\n    if (+enteredAge < 1) {\n      setError({\n        title: \"Invalid age\",\n        message: \"Please enter a valid age ( > 0).\"\n      });\n      return;\n    } //users 객체의 배열 추가\n    //상태 끌어올리기 개념\n    //props를 통해 얹는 값이 함수\n\n\n    console.log(enteredUserName, enteredAge);\n    props.onAddUser(enteredUserName, enteredAge); //reset : input에 현재 상태를 반영하지 않으면 reset되지 않음\n    //input요소는 속성으로 value를 갖는데 value에 사용자가 입력한 값을 설정할수 있다.value={enteredAge}\n\n    setEnteredUserName(\"\");\n    setEnteredAge(\"\");\n  };\n\n  const usernameChangeHandler = event => {\n    setEnteredUserName(event.target.value);\n  };\n\n  const ageChangeHandler = event => {\n    setEnteredAge(event.target.value);\n  }; //에러 오케이 버튼 클릭시 모달창 닫힘.\n\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      title: error.title,\n      message: error.message,\n      onConfirm: errorHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.input,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addUserHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username\",\n          type: \"text\",\n          value: enteredUserName,\n          onChange: usernameChangeHandler,\n          ref: nameInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"age\",\n          children: \"Age(Years)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"age\",\n          type: \"number\",\n          value: enteredAge,\n          onChange: ageChangeHandler,\n          ref: ageInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddUser, \"cU18NRrVNgliZiinc0o3tBGVZy4=\");\n\n_c = AddUser;\nexport default AddUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"names":["React","useState","useRef","Card","Button","ErrorModal","Wrapper","classes","AddUser","props","nameInputRef","ageInputRef","enteredUserName","setEnteredUserName","enteredAge","setEnteredAge","error","setError","addUserHandler","event","preventDefault","enteredName","current","value","console","log","trim","length","title","message","onAddUser","usernameChangeHandler","target","ageChangeHandler","errorHandler","input"],"sources":["/Users/hyunjung/Desktop/udemy/react/test/Ustudy/02-starting-project/src/components/Users/AddUser.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport Card from \"../UI/Card\";\nimport Button from \"../UI/Button\";\nimport ErrorModal from \"../UI/ErrorModal\";\nimport Wrapper from \"../Helpers/Wrapper\";\n\nimport classes from \"./AddUser.module.css\";\n\nconst AddUser = (props) => {\n  const nameInputRef = useRef();\n  const ageInputRef = useRef();\n\n  const [enteredUserName, setEnteredUserName] = useState(\"\");\n  const [enteredAge, setEnteredAge] = useState(\"\");\n  const [error, setError] = useState();\n\n  //유효한 입력값을 갖는 경우에만 코드 실행.\n  const addUserHandler = (event) => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    console.log(nameInputRef.current.value);\n    if (enteredUserName.trim().length === 0 || enteredAge.trim().length === 0) {\n      //오류 상태 설정\n      setError({\n        title: \"Invalid input\",\n        message: \"Please enter a valid name and age (non-empty values).\",\n      });\n      return;\n    }\n    if (+enteredAge < 1) {\n      setError({\n        title: \"Invalid age\",\n        message: \"Please enter a valid age ( > 0).\",\n      });\n      return;\n    }\n    //users 객체의 배열 추가\n    //상태 끌어올리기 개념\n    //props를 통해 얹는 값이 함수\n    console.log(enteredUserName, enteredAge);\n    props.onAddUser(enteredUserName, enteredAge);\n    //reset : input에 현재 상태를 반영하지 않으면 reset되지 않음\n    //input요소는 속성으로 value를 갖는데 value에 사용자가 입력한 값을 설정할수 있다.value={enteredAge}\n    setEnteredUserName(\"\");\n    setEnteredAge(\"\");\n  };\n\n  const usernameChangeHandler = (event) => {\n    setEnteredUserName(event.target.value);\n  };\n  const ageChangeHandler = (event) => {\n    setEnteredAge(event.target.value);\n  };\n  //에러 오케이 버튼 클릭시 모달창 닫힘.\n  const errorHandler = () => {\n    setError(null);\n  };\n  return (\n    <Wrapper>\n      {error && (\n        <ErrorModal\n          title={error.title}\n          message={error.message}\n          onConfirm={errorHandler}\n        />\n      )}\n      <Card className={classes.input}>\n        <form onSubmit={addUserHandler}>\n          <label htmlFor=\"username\">Username</label>\n          <input\n            id=\"username\"\n            type=\"text\"\n            value={enteredUserName}\n            onChange={usernameChangeHandler}\n            ref={nameInputRef}\n          />\n          <label htmlFor=\"age\">Age(Years)</label>\n          <input\n            id=\"age\"\n            type=\"number\"\n            value={enteredAge}\n            onChange={ageChangeHandler}\n            ref={ageInputRef}\n          />\n          <Button type=\"submit\">Add User</Button>\n        </form>\n      </Card>\n    </Wrapper>\n  );\n};\n\nexport default AddUser;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}