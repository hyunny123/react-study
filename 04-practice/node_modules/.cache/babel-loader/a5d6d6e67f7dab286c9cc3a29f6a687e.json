{"ast":null,"code":"var _jsxFileName = \"/Users/hyunjung/Desktop/udemy/react/test/Ustudy/04-practice/src/components/Cart/Cart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport CartContext from \"../../store/cart-context\";\nimport CartItem from \"./CartItem\";\nimport Modal from \"../UI/Modal\";\nimport classes from \"./Cart.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const cartCtx = useContext(CartContext);\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`; //항목이 있는 경우에만 나타나게 하기\n\n  const hasItems = cartCtx.items.length > 0;\n\n  const CardItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes[\"cart-items\"],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {}, item.i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n\n  return (\n    /*#__PURE__*/\n    //모달의 백드롭 클릭시 모달 닫힘\n    _jsxDEV(Modal, {\n      onClose: props.onClose,\n      children: [CardItems, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.total,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Total Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: totalAmount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes[\"button--alt\"],\n          onClick: props.onClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.button,\n          children: \"Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(Cart, \"5vyuBAd9ctzs1tCKQUMcCu/LGtk=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useContext","CartContext","CartItem","Modal","classes","Cart","props","cartCtx","totalAmount","toFixed","hasItems","items","length","CardItems","map","item","i","onClose","total","actions","button"],"sources":["/Users/hyunjung/Desktop/udemy/react/test/Ustudy/04-practice/src/components/Cart/Cart.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport CartContext from \"../../store/cart-context\";\nimport CartItem from \"./CartItem\";\nimport Modal from \"../UI/Modal\";\nimport classes from \"./Cart.module.css\";\n\nconst Cart = (props) => {\n  const cartCtx = useContext(CartContext);\n\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  //항목이 있는 경우에만 나타나게 하기\n  const hasItems = cartCtx.items.length > 0;\n\n  const CardItems = (\n    <ul className={classes[\"cart-items\"]}>\n      {cartCtx.items.map((item) => (\n        <CartItem key={item.i} />\n      ))}\n    </ul>\n  );\n  return (\n    //모달의 백드롭 클릭시 모달 닫힘\n    <Modal onClose={props.onClose}>\n      {CardItems}\n      <div className={classes.total}>\n        <span>Total Amount</span>\n        <span>{totalAmount}</span>\n      </div>\n      <div className={classes.actions}>\n        <button className={classes[\"button--alt\"]} onClick={props.onClose}>\n          Close\n        </button>\n        {hasItems && <button className={classes.button}>Order</button>}\n      </div>\n    </Modal>\n  );\n};\n\nexport default Cart;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;EAAA;;EACtB,MAAMC,OAAO,GAAGP,UAAU,CAACC,WAAD,CAA1B;EAEA,MAAMO,WAAW,GAAI,IAAGD,OAAO,CAACC,WAAR,CAAoBC,OAApB,CAA4B,CAA5B,CAA+B,EAAvD,CAHsB,CAItB;;EACA,MAAMC,QAAQ,GAAGH,OAAO,CAACI,KAAR,CAAcC,MAAd,GAAuB,CAAxC;;EAEA,MAAMC,SAAS,gBACb;IAAI,SAAS,EAAET,OAAO,CAAC,YAAD,CAAtB;IAAA,UACGG,OAAO,CAACI,KAAR,CAAcG,GAAd,CAAmBC,IAAD,iBACjB,QAAC,QAAD,MAAeA,IAAI,CAACC,CAApB;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;;EAOA;IAAA;IACE;IACA,QAAC,KAAD;MAAO,OAAO,EAAEV,KAAK,CAACW,OAAtB;MAAA,WACGJ,SADH,eAEE;QAAK,SAAS,EAAET,OAAO,CAACc,KAAxB;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAA,UAAOV;QAAP;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAME;QAAK,SAAS,EAAEJ,OAAO,CAACe,OAAxB;QAAA,wBACE;UAAQ,SAAS,EAAEf,OAAO,CAAC,aAAD,CAA1B;UAA2C,OAAO,EAAEE,KAAK,CAACW,OAA1D;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,EAIGP,QAAQ,iBAAI;UAAQ,SAAS,EAAEN,OAAO,CAACgB,MAA3B;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAJf;MAAA;QAAA;QAAA;QAAA;MAAA,QANF;IAAA;MAAA;MAAA;MAAA;IAAA;EAFF;AAgBD,CA9BD;;GAAMf,I;;KAAAA,I;AAgCN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}